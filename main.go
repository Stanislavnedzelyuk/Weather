package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"
	"os"
)

const weatherApiKey = "5b2ed480d2ac48f7b6e150214241210"
const weatherApiURL = "http://api.weatherapi.com/v1/current.json?key=" + weatherApiKey + "&q="

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ —Å WeatherAPI
type WeatherData struct {
	Current struct {
		TempC float64 `json:"temp_c"` // —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –≥—Ä–∞–¥—É—Å–∞—Ö –¶–µ–ª—å—Å–∏—è
	} `json:"current"`
}

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏ —Å IP-API
type LocationData struct {
	City string `json:"city"`
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –ø–æ IP
func getCity() (string, error) {
	resp, err := http.Get("http://ip-api.com/json/")
	if err != nil {
		return "", fmt.Errorf("–æ—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ IP-API: %v", err)
	}
	defer resp.Body.Close()

	if resp.StatusCode != http.StatusOK {
		return "", fmt.Errorf("–æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ IP-API: %v", resp.StatusCode)
	}

	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		return "", fmt.Errorf("–æ—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ IP-API: %v", err)
	}

	var locationData LocationData
	err = json.Unmarshal(body, &locationData)
	if err != nil {
		return "", fmt.Errorf("–æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è: %v", err)
	}

	return locationData.City, nil
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –ø–æ –≥–æ—Ä–æ–¥—É
func getWeather(city string) (float64, error) {
	resp, err := http.Get(weatherApiURL + city)
	if err != nil {
		return 0, fmt.Errorf("–æ—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ WeatherAPI: %v", err)
	}
	defer resp.Body.Close()

	if resp.StatusCode != http.StatusOK {
		return 0, fmt.Errorf("–æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ WeatherAPI: %v", resp.StatusCode)
	}

	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		return 0, fmt.Errorf("–æ—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ WeatherAPI: %v", err)
	}

	var weatherData WeatherData
	err = json.Unmarshal(body, &weatherData)
	if err != nil {
		return 0, fmt.Errorf("–æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–≥–æ–¥—ã: %v", err)
	}

	return weatherData.Current.TempC, nil
}

func main() {
	// –ü–æ–ª—É—á–∞–µ–º –≥–æ—Ä–æ–¥
	city, err := getCity()
	if err != nil {
		fmt.Println("–û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞:", err)
		os.Exit(1)
	}

	// –ü–æ–ª—É—á–∞–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è —ç—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞
	temp, err := getWeather(city)
	if err != nil {
		fmt.Println("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã:", err)
		os.Exit(1)
	}

	// –í—ã–≤–æ–¥ –ø–æ–≥–æ–¥—ã –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–µ –º–µ–Ω—é
	fmt.Printf("üå° %.1f¬∞C in %s | color=blue\n", temp, city)

	// –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
	fmt.Println("---")
	fmt.Println("–û–±–Ω–æ–≤–∏—Ç—å | refresh=true")
}
